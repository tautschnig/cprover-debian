<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.4.1">
      <useBuildBlocker>false</useBuildBlocker>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
  </properties>
  <scm class="hudson.scm.SubversionSCM" plugin="subversion@2.4.1">
    <locations>
      <hudson.scm.SubversionSCM_-ModuleLocation>
        <remote>http://www.cprover.org/svn/cbmc/trunk</remote>
        <credentialsId></credentialsId>
        <local>cbmc-trunk</local>
        <depthOption>infinity</depthOption>
        <ignoreExternalsOption>true</ignoreExternalsOption>
      </hudson.scm.SubversionSCM_-ModuleLocation>
    </locations>
    <excludedRegions></excludedRegions>
    <includedRegions></includedRegions>
    <excludedUsers></excludedUsers>
    <excludedRevprop></excludedRevprop>
    <excludedCommitMessages></excludedCommitMessages>
    <workspaceUpdater class="hudson.scm.subversion.UpdateWithRevertUpdater"/>
    <ignoreDirPropChanges>false</ignoreDirPropChanges>
    <filterChangelog>false</filterChangelog>
  </scm>
  <assignedNode>master</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

set -e

if [ ! -d cbmc-trunk/minisat-2.2.0 ] ; then
  cd cbmc-trunk/src
  make minisat2-download
  make -C solvers ../../minisat-2.2.0/simp/SimpSolver.o ../../minisat-2.2.0/core/Solver.o
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

set -e

for b in cbmc goto-instrument goto-cc ; do
  rm -f *-$b
done

svn info cbmc-trunk | grep &apos;^Revision:&apos; | awk &apos;{ print $2 }&apos; &gt; SVN_REV</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

set -e

apply_patches()
{
  local src=$1

  for p in `ls $src/patches/` ; do
    if patch -p1 --dry-run &lt; $src/patches/$p ; then
      patch -p1 &lt; $src/patches/$p
    else
      return 1
    fi
  done

  return 0
}

unapply_patches()
{
  local src=$1

  for p in `ls -r $src/patches/` ; do
    if patch -p1 -R --dry-run &lt; $src/patches/$p ; then
      patch -p1 -R &lt; $src/patches/$p
    else
      return 1
    fi
  done

  return 0
}

cd cbmc-trunk

for d in /import/debian-mole/cbmc-patch-sets/* ; do
  bn=`basename $d`
  echo &quot;Building $d&quot;
  [ ! -d $d/patches ] || apply_patches $d
  cd src
  make clean
  if [ -s $d/BUILD ] ; then
    . $d/BUILD
  else
    make -j3
  fi
  cd ..
  [ ! -d $d/patches ] || unapply_patches $d
  for b in cbmc goto-instrument goto-cc ; do
    cp src/$b/$b ../$bn-$b
  done
done
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.BuildTrigger>
      <childProjects>JOB-prepare-binaries-slaves</childProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </hudson.tasks.BuildTrigger>
  </publishers>
  <buildWrappers/>
</project>