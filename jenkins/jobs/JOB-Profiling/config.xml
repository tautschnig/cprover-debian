<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.4.1">
      <useBuildBlocker>false</useBuildBlocker>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.2.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/tautschnig/bmt.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <assignedNode>SID_CHROOT</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

set -e

if [ ! -e llbmc-bench/cprover/rules ] ; then
  cd pkgs
  ./make-pkg.sh llbmc-bench
  cp llbmc-bench.cprover-bm.tar.gz ../
  cp ../orig-src/llbmc-bench-vstte-2012.tgz ../
  cd ..
  scripts/cpbm unpack llbmc-bench-vstte-2012.tgz llbmc-bench.cprover-bm.tar.gz
fi

if [ ! -f gprof2html.py ] ; then
  wget &apos;http://svn.python.org/projects/python/trunk/Tools/scripts/gprof2html.py&apos; -O gprof2html.py
  sed -i &apos;/webbrowser.open/d&apos; gprof2html.py
fi

if [ ! -d massif-view ] ; then
  svn checkout http://massif-view.googlecode.com/svn/trunk/ massif-view
  sed -i &apos;94s/#//;94s/..\/massif.out.28353/massif.out/;98s/#//;101s/#//;104s/#//&apos; \
    massif-view/pysrc/pymassif/html.py
fi

mv JOB-prepare-binaries-master/workspace/trunk-goto-cc goto-cc

rm -rf html-reports
mkdir html-reports

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

set -e

export PATH=$PWD/scripts:$PWD:$PATH

for c in JOB-prepare-binaries-master/workspace/*-cbmc ; do
  if ! basename $c | grep -q ^profiling- ; then
    continue
  fi
  bn=`basename $c`
  mv $c $bn
  id=`echo $bn | sed &apos;s/^profiling-//;s/-cbmc$//&apos;`
  if [ &quot;x$id&quot; = x ] ; then
    echo &quot;$bn yields no valid id&quot;
    exit 1
  fi
  if [ &quot;x$id&quot; = xtrunk ] ; then
    id=&quot;r$(&lt;JOB-prepare-binaries-master/workspace/SVN_REV)&quot;
  else
    id=&quot;r$(&lt;JOB-prepare-binaries-master/workspace/SVN_REV)+$id&quot;
  fi

  echo &quot;Profiling $id&quot;
  cd llbmc-bench
  cprover/rules clean
  cprover/rules CONFIG=cbmc.profiling verify TOOL=$bn -j4
  cpbm csv cbmc cprover/verified.cbmc.profiling &gt; $id.csv

  cd results.cbmc.profiling
  echo &quot;Building summary profile for $id&quot;
  gprof --sum ../../$bn `find . -name &quot;*.gmon.out.*&quot;`
  echo &quot;Building text profile&quot;
  gprof ../../$bn gmon.sum &gt; full.profile

  python ../../gprof2html.py full.profile
  mkdir ../../html-reports/$id
  mv full.profile.html ../../html-reports/$id/

  cd ..

  cpbm web $id.csv ../html-reports/$id/results
  cd ..
done
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

set -e

for c in *-cbmc ; do
  id=`echo $c | sed &apos;s/^profiling-//;s/-cbmc$//&apos;`
  bn=&quot;$id-cbmc&quot;
  if [ ! -e JOB-prepare-binaries-master/workspace/$bn ] ; then
    continue
  fi
  
  if [ &quot;x$id&quot; = xtrunk ] ; then
    id=&quot;r$(&lt;JOB-prepare-binaries-master/workspace/SVN_REV)&quot;
  else
    id=&quot;r$(&lt;JOB-prepare-binaries-master/workspace/SVN_REV)+$id&quot;
  fi

  mv JOB-prepare-binaries-master/workspace/$bn .
  rm $c

  valgrind --tool=massif ./$bn \
    --bounds-check --div-by-zero-check --pointer-check --signed-overflow-check \
    --unsigned-overflow-check --function intSqRoot --unwind 201 \
    llbmc-bench/build/anonymous/intSqRoot.bin

  mv massif.out.* massif.out
  cd massif-view/pysrc/pymassif
  rm -rf test
  mkdir test
  python html.py
  cd ../../../
  mv massif-view/pysrc/pymassif/test html-reports/$id/massif
  ms_print massif.out &gt; html-reports/$id/massif/massif.txt

  rm $bn
done
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <htmlpublisher.HtmlPublisher plugin="htmlpublisher@1.3">
      <reportTargets>
        <htmlpublisher.HtmlPublisherTarget>
          <reportName>Profile and Results</reportName>
          <reportDir>html-reports</reportDir>
          <reportFiles>*/full.profile.html, */results/index.html, */massif/td_top.html, */massif/massif.txt</reportFiles>
          <keepAll>false</keepAll>
          <allowMissing>false</allowMissing>
          <wrapperName>htmlpublisher-wrapper.html</wrapperName>
        </htmlpublisher.HtmlPublisherTarget>
      </reportTargets>
    </htmlpublisher.HtmlPublisher>
  </publishers>
  <buildWrappers>
    <de.jamba.hudson.plugin.wsclean.PrePostClean plugin="hudson-wsclean-plugin@1.0.4">
      <before>true</before>
      <behind>false</behind>
    </de.jamba.hudson.plugin.wsclean.PrePostClean>
    <com.michelin.cio.hudson.plugins.copytoslave.CopyToSlaveBuildWrapper plugin="copy-to-slave@1.4.3">
      <includes>JOB-prepare-binaries-master/workspace/SVN_REV,JOB-prepare-binaries-master/workspace/*-cbmc,JOB-prepare-binaries-master/workspace/trunk-goto-cc</includes>
      <excludes></excludes>
      <flatten>false</flatten>
      <includeAntExcludes>false</includeAntExcludes>
      <hudsonHomeRelative>false</hudsonHomeRelative>
      <relativeTo>somewhereElse</relativeTo>
    </com.michelin.cio.hudson.plugins.copytoslave.CopyToSlaveBuildWrapper>
  </buildWrappers>
</project>